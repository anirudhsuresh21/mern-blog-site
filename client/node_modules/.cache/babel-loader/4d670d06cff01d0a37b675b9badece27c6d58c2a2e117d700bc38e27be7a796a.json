{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aniru\\\\Desktop\\\\Projects\\\\blog\\\\client\\\\src\\\\components\\\\PostsPage.js\",\n  _s = $RefreshSig$();\nimport Header from \"./Header\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { formatISO9075 } from \"date-fns\";\nimport { UserContext } from \"../UserContext\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostsPage() {\n  _s();\n  const [postInfo, setPostInfo] = useState(null);\n  const {\n    userInfo\n  } = useContext(UserContext);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:4000/post/${id}`).then(response => {\n      response.json().then(postInfo => {\n        setPostInfo(postInfo);\n      });\n    });\n  }, []);\n  if (!postInfo) return '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: postInfo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"by @\", postInfo.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 10\n          }, this), \" / \", /*#__PURE__*/_jsxDEV(\"time\", {\n            children: formatISO9075(new Date(postInfo.createdAt))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), userInfo.id === postInfo.author._id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-row\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"edit-btn\",\n            to: `/edit/${postInfo._id}`,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postImage\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:4000/${postInfo.cover}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        dangerouslySetInnerHTML: {\n          __html: postInfo.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(PostsPage, \"dwtLtpcNxlpPhwC9d3oEzQOTAVg=\", false, function () {\n  return [useParams];\n});\n_c = PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["Header","useContext","useEffect","useState","useParams","formatISO9075","UserContext","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsPage","_s","postInfo","setPostInfo","userInfo","id","fetch","then","response","json","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","author","username","Date","createdAt","_id","to","src","cover","dangerouslySetInnerHTML","__html","content","_c","$RefreshReg$"],"sources":["C:/Users/aniru/Desktop/Projects/blog/client/src/components/PostsPage.js"],"sourcesContent":["import Header from \"./Header\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {formatISO9075} from \"date-fns\";\r\nimport {UserContext} from \"../UserContext\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function PostsPage(){\r\n    const [postInfo,setPostInfo] = useState(null);\r\n    const {userInfo} = useContext(UserContext);\r\n    const {id} = useParams();\r\n    useEffect(() => {\r\n      fetch(`http://localhost:4000/post/${id}`)\r\n        .then(response => {\r\n          response.json().then(postInfo => {\r\n            setPostInfo(postInfo);\r\n          });\r\n        });\r\n    }, []);\r\n  \r\n    if (!postInfo) return '';\r\n    return(\r\n        <>\r\n        <div className='post'>\r\n      <h1>{postInfo.title}</h1>\r\n      <div className='author'>\r\n      <p><b>by @{postInfo.author.username}</b> / <time>{formatISO9075(new Date(postInfo.createdAt))}</time></p>\r\n      {userInfo.id === postInfo.author._id && (\r\n      <div className=\"edit-row\"><Link className=\"edit-btn\" to={`/edit/${postInfo._id}`}>\r\n            Edit\r\n          </Link>\r\n          \r\n        </div>\r\n         )}\r\n      </div>\r\n      <div className=\"postImage\"><img src={`http://localhost:4000/${postInfo.cover}`} ></img></div>\r\n      <div className=\"content\" dangerouslySetInnerHTML={{__html:postInfo.content}} />\r\n    </div>\r\n        </>\r\n        \r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}